{
  "_args": [
    [
      {
        "raw": "isparta-instrumenter-loader@^1.0.0",
        "scope": null,
        "escapedName": "isparta-instrumenter-loader",
        "name": "isparta-instrumenter-loader",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/redhat/EricProject/react-demo"
    ]
  ],
  "_cnpm_publish_time": 1466415790537,
  "_from": "isparta-instrumenter-loader@^1.0.0",
  "_hasShrinkwrap": false,
  "_id": "isparta-instrumenter-loader@1.0.1",
  "_location": "/isparta-instrumenter-loader",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/isparta-instrumenter-loader-1.0.1.tgz_1466415788073_0.4224587318021804"
  },
  "_npmUser": {
    "name": "colch",
    "email": "colchgh@gmail.com"
  },
  "_npmVersion": "3.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "isparta-instrumenter-loader@^1.0.0",
    "scope": null,
    "escapedName": "isparta-instrumenter-loader",
    "name": "isparta-instrumenter-loader",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://registry.npm.taobao.org/isparta-instrumenter-loader/download/isparta-instrumenter-loader-1.0.1.tgz",
  "_shasum": "9c308c9be03a7bc7e30bad9b6ee87c203e029526",
  "_shrinkwrap": null,
  "_spec": "isparta-instrumenter-loader@^1.0.0",
  "_where": "/home/redhat/EricProject/react-demo",
  "author": {
    "name": "Max Sysoev",
    "email": "colchgh@gmail.com",
    "url": "https://github.com/ColCh"
  },
  "bugs": {
    "url": "https://github.com/ColCh/isparta-instrumenter-loader/issues"
  },
  "dependencies": {
    "isparta": "^4.0.0",
    "loader-utils": "^0.2.6",
    "lodash": "^3.5.0"
  },
  "deprecated": "isparta-instrumenter-loader is deprecated. Please use isparta-loader instead",
  "description": "isparta-instrumenter-loader is deprecated. Please use isparta-loader instead",
  "devDependencies": {
    "eslint": "^0.8.2",
    "jscs": "^1.6.2"
  },
  "directories": {},
  "dist": {
    "shasum": "9c308c9be03a7bc7e30bad9b6ee87c203e029526",
    "size": 2105,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/isparta-instrumenter-loader/download/isparta-instrumenter-loader-1.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "26674b70e6d211464de8492dfcabfd96ac1328bb",
  "homepage": "https://github.com/ColCh/isparta-instrumenter-loader",
  "keywords": [
    "webpack",
    "loader",
    "isparta",
    "instrumenter",
    "coverage"
  ],
  "license": "WTFPL",
  "main": "index.js",
  "maintainers": [
    {
      "name": "colch",
      "email": "colouredchalkmelky@gmail.com"
    }
  ],
  "name": "isparta-instrumenter-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^1.5.3"
  },
  "publish_time": 1466415790537,
  "readme": "# :warning: :warning: :exclamation: DEPRECATED :exclamation: :warning: :warning:\n\n> This module is unmaintained. Please use [deepsweet/isparta-loader](https://github.com/deepsweet/isparta-loader)\n\n## Isparta instrumenter loader for [webpack](https://webpack.github.io/)\n\nInstrument JS files with [Isparta](https://github.com/douglasduteil/isparta) for subsequent code coverage reporting. Forked from [deepsweet/istanbul-instrumenter-loader](https://github.com/deepsweet/istanbul-instrumenter-loader). Thank you for your work :thumbsup:\n\n### Install\n\n```sh\n$ npm i -S isparta-instrumenter-loader\n```\n\n### Usage\n\nUseful to get work together [karma-webpack](https://github.com/webpack/karma-webpack) and [karma-coverage](https://github.com/karma-runner/karma-coverage). For example:\n\n1. [karma-webpack config](https://github.com/webpack/karma-webpack#karma-webpack)\n2. [karma-coverage config](https://github.com/karma-runner/karma-coverage#configuration)\n3. replace `karma-coverage`'s code instrumenting with `isparta-instrumenter-loader`'s one:\n\n```javascript\nconfig.set({\n    ...\n    files: [\n      // 'src/**/*.js', << you don't need this anymore\n      'test/**/*.js'\n    ],\n    ...\n    preprocessors: {\n        // 'src/**/*.js': ['coverage'], << and this too\n        'test/**/*.js': [ 'webpack' ]\n    },\n    reporters: [ 'progress', 'coverage' ],\n    coverageReporter: {\n        type: 'html',\n        dir: 'coverage/'\n    },\n    ...\n    webpack: {\n        ...\n        module: {\n            preLoaders: [ // << add subject as webpack's preloader\n                {\n                  test: /(\\.jsx)|(\\.js)$/,\n                  // exclude this dirs from coverage\n                  exclude: /(test|node_modules|bower_components)\\//,\n                  loader: 'isparta-instrumenter-loader'\n                },\n            ],\n            // other webpack loaders ...\n            loaders: [ ... ],\n        },\n        ...\n    }\n});\n```\n\n[Documentation: Using loaders](https://webpack.github.io/docs/using-loaders.html).\n\n#### Passing options to isparta\n\nYou can pass config variables to *isparta* using *webpack* loader params.\n\nExample (*webpack* loader config):\n```js\n{\n  test: /(.jsx)|(.js)$/,\n  exclude: /(node_modules|bower_components|Spec)/,\n  loader: 'isparta-instrumenter',\n  query: {\n    babel: {\n      presets: ['es2015', 'react', 'stage-0']\n    }\n}\n```\nThis will specify which presets *babel* should use at instrumenting stage.\n\n### License\n[WTFPL](http://www.wtfpl.net/wp-content/uploads/2012/12/wtfpl-strip.jpg)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ColCh/isparta-instrumenter-loader.git"
  },
  "scripts": {
    "test": "eslint index.js && jscs index.js"
  },
  "version": "1.0.1"
}
